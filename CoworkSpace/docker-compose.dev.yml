services:
  # Base de données pour le développement
  database:
    image: mongo:7
    container_name: coworkspace-db-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: coworkspace_dev
    volumes:
      - mongodb_dev_data:/data/db
      - ./data:/docker-entrypoint-initdb.d/data
    ports:
      - "27017:27017"
    networks:
      - coworkspace-dev-network

  # Backend en mode développement
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: coworkspace-api-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password@database:27017/coworkspace-db-dev?authSource=admin
      JWT_SECRET: 3d85163f7bef84e4ea26c4711755c765
      JWT_EXPIRES_IN: 2629800
      CORS_ORIGIN: http://localhost:5173
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: coworkspace
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: "300"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    ports:
      - "3000:3000"
    depends_on:
      - database
    networks:
      - coworkspace-dev-network
    command: npm run dev

  # Frontend en mode développement
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: coworkspace-web-dev
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend-dev
    networks:
      - coworkspace-dev-network
    command: npm run dev

volumes:
  mongodb_dev_data:
    driver: local

networks:
  coworkspace-dev-network:
    driver: bridge
